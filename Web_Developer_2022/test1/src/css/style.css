
                                /* Величины измерений */
                                
  /*  vw - размер зависит от величины и ширины экрана (персональная область видимости)
      vh - размер зависит от высоты экрана 
  */                              
                                
                                /* Блочная модель CSS Часть 1 */


/* @import 'css/buttons.css'; --> импорт других стилей для объединения*/

/* 
  selector{  --> или selector пробел тэг... для обращения к вложенному селектору
    свойства: значение;
    свойства: значение;
    свойства: значение;
  }
*/

/* body {
  background-color: khaki;
} */

* {
  box-sizing: border-box; /* Для присвоения всем элементам точных размеров */
}

h3 {            /* для изменения ВСЕХ заголовков */
  color: blue;
  font-size: 15px;    /* размер шрифта */
  font-style: italic; /* курсив или другие стили */
  text-align: center; /* текст по центру */
  text-decoration: underline; /* декорация текста */
}


/* Если указано несколько классов, то актуальный это последний */

.chapter{       /* Обращение к тэгу через класс */
  color: brown;
}

#tchk {         /* обращение к тэгу через уникальный id */
  color: rebeccapurple;
  font-weight: bold;  /* Жирность выделенного элемента, можно цифрами, или если у шрифта нет жирности*/
}

.text {
  font-weight: 900; /* жирность текста в цифрах от 100 до 900 */
  text-transform: uppercase; /* регистр */
}

/* Комбинация селекторов без пробела допустима только у классов или id. Между тэгами всегда нужно ставить пробел или другие допустимые символы.
*/

.box1 { /* пример 1 */
  /* display: inline; изменение из блочного в строчный блок через inline */
  display: inline-block; /* изменение из блочного в строчно-блочный блок через inline-block */
  width: 300px;
  height: 300px;
  background-color: green;
  padding: 20px; /* равномерно со всех сторон */
  /* padding: 20px 50px;  --> первое значение верх-низ, второе лево-право*/
  border-width: 3px;/* ширина границы */
  border-style: solid;/* стиль границы */
  border-color: black;/* цвет границы */
  /* более компактный вариант border  и перечислить свойства*/

  margin: 20px;
  vertical-align: top; /* позволяет выровнять по вертикали, только в случае display: inline-block; */
}

.box2 { /* Пример 2 */
  /* display: inline; */
  display: inline-block;
  width: 300px;
  height: 300px;
  background-color: blue;
  padding: 20px;
  /* или

  padding-top или left...

  padding: 20px 50px 40px 60px --> значения идут по часовой стрелке начиная слева
  
  */

  border-width: 3px;/* ширина границы */
  border-style: solid;/* стиль границы */
  border-color: red;/* цвет границы */

  /* 
  
  лучше использовать короткий вариант
  border: 3px solid red; 
  
  */

  margin: 20px;

}

/* .green {    высота и ширина в процентах от родительского контейнера, работает в случае 
  width: 50%;  установленной фиксированной высоты или ширины, взависимости от того что 
  height: 50%; задаём
} */

                                /* Блочная модель CSS Часть 2 */

/* 1. Блочные */                          
/* 2. Строчные */
/* 3. Строчно-блочные */

/* Посмотреть спецификацию можно на HTML Reference */

                              /* Блочный элемент */

    /* a. box-sizing: border-box --> используется для создания точного размера блока с учётом границ, используется как правило для всего что находится на странице и присваивают вначале через "*" */

                              /* Строчный элемент */

a {
  padding: 20px;
  margin: 20px; /* не отодвигает сверху и снизу, так как строчный элемент */
  width: 200px; /* не влияет на строчный элемент */
}    

img {
  width: 500px;
  margin: 0 auto; /* способ выравнивания по горизонтали, к вертикали не применим */
  display: block;
  /* float: left; позволяет оптикать */


}

/*
nav {
  position: static; отображение по умолчанию 
   
    position: relative;  позволяет двигать блоки
    left: 130px сдвиг по горизонтали
    top: 50px    сдвиг по вертикали 

    position: absolute; позволяет не двигать блок, а указывает точную позицию 
    с помощю left. top. right. bottom
    и работает absolute ТОЛЬКО внутри блоков relative

    position: fixed; фиксируется позиция и при скроле позиция не изменна

    position: inherit; наследует свойство position от родителя(от того в чей блок вложено

}*/

/* Для того что бы создать расположение объектов через эффект карточной колоды добавляем в свойство объекта    z-index: 1;  чем выше значение, тем ближе к пользователю расположен, позиции должны совпадать */